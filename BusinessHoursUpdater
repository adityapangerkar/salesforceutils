public class BusinessHoursUpdater{
    @InvocableMethod
    public static void calculateAndUpdateBusinessHours(List<InputWrapper> inputParams) {
        try{
            if (inputParams == null || inputParams.isEmpty()){
                return;
            }
            List<BusinessHours> businessHoursList = [SELECT Id FROM BusinessHours WHERE Name =: inputParams[0].businessHoursName LIMIT 1];
            if(businessHoursList.isEmpty()){
                return;
            }
            DateTime resultDateTime = BusinessHours.add(businessHoursList[0].Id, System.now(), inputParams[0].timeDuration);
            SObjectType sObjectType = inputParams[0].recordId.getSObjectType();
            SObject sObjectInstance = sObjectType.newSObject();
            sObjectInstance.put('Id', inputParams[0].recordId);
            sObjectInstance.put(inputParams[0].fieldApiName, resultDateTime);
            update sObjectInstance;
        }catch(Exception e){
            System.debug('Error in BusinessHoursUpdater: ' + e.getMessage());
        }
        
    }
    public class InputWrapper{
        @InvocableVariable(required=true)
        public String businessHoursName;
        @InvocableVariable(required=true)
        public Id recordId;
        @InvocableVariable(required=true)
        public String fieldApiName;
        @InvocableVariable(required=true)
        public Long timeDuration;
    }
}
